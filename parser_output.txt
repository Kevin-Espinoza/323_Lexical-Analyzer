
Token:	KEYWORD		Lexeme:	int
	<Statement> -> <Declarative>
	<Declarative> -> <Type> <ID>
	<Type> -> bool | float | int

Token:	IDENTIFIER	Lexeme:	num

Token:	SEPARATOR	Lexeme:	,

Token:	IDENTIFIER	Lexeme:	nu2m

Token:	SEPARATOR	Lexeme:	,

Token:	IDENTIFIER	Lexeme:	sum

Token:	SEPARATOR	Lexeme:	;

Token:	IDENTIFIER	Lexeme:	num
	<Statement> -> <Assign>
	<Assign> -> <ID> = <Expression>;

Token:	OPERATOR	Lexeme:	=

Token:		Lexeme:	0
	<Expression> -> <Expression> + <Term> | <Expression> - <Term> | <Term>
	<Term> -> <Term> * <Factor> | <Term> / <Factor> | <Factor>
	<Factor> -> ( <Expression> ) | <ID> | <Num>

Token:	SEPARATOR	Lexeme:	;

Token:	IDENTIFIER	Lexeme:	nu2m
	<Statement> -> <Assign>
	<Assign> -> <ID> = <Expression>;

Token:	OPERATOR	Lexeme:	=

Token:		Lexeme:	15
	<Expression> -> <Expression> + <Term> | <Expression> - <Term> | <Term>
	<Term> -> <Term> * <Factor> | <Term> / <Factor> | <Factor>
	<Factor> -> ( <Expression> ) | <ID> | <Num>

Token:	SEPARATOR	Lexeme:	;

Token:	IDENTIFIER	Lexeme:	sum
	<Statement> -> <Assign>
	<Assign> -> <ID> = <Expression>;

Token:	OPERATOR	Lexeme:	=

Token:		Lexeme:	0
	<Expression> -> <Expression> + <Term> | <Expression> - <Term> | <Term>
	<Term> -> <Term> * <Factor> | <Term> / <Factor> | <Factor>
	<Factor> -> ( <Expression> ) | <ID> | <Num>

Token:	SEPARATOR	Lexeme:	;

Token:	IDENTIFIER	Lexeme:	sum
	<Statement> -> <Assign>
	<Assign> -> <ID> = <Expression>;

Token:	OPERATOR	Lexeme:	=

Token:	IDENTIFIER	Lexeme:	num
	<Expression> -> <Expression> + <Term> | <Expression> - <Term> | <Term>
	<Term> -> <Term> * <Factor> | <Term> / <Factor> | <Factor>
	<Factor> -> ( <Expression> ) | <ID> | <Num>
	<ID> -> id

Token:	OPERATOR	Lexeme:	+

Token:	IDENTIFIER	Lexeme:	nu2m
	<Term> -> <Term> * <Factor> | <Term> / <Factor> | <Factor>
	<Factor> -> ( <Expression> ) | <ID> | <Num>
	<ID> -> id

Token:	SEPARATOR	Lexeme:	;
